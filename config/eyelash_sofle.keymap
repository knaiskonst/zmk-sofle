#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};


/ {

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;
        tap-ms = <100>;
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp ESC     &kp N1        &kp N2        &kp N3        &kp N4  &kp N5       &kp UP_ARROW     &kp N6     &kp N7     &kp N8     &kp N9           &kp N0      &kp BACKSPACE
&kp TAB     &kp Q         &kp W         &kp E         &kp R   &kp T        &kp DOWN_ARROW   &kp Y      &kp U      &kp I      &kp O            &kp P       &kp BSLH
&kp LSHFT   &kp A         &kp S         &kp D         &kp F   &kp G        &kp LEFT_ARROW   &kp H      &kp J      &kp K      &kp L            &kp SEMI    &kp APOS
&kp LCTRL   &kp Z         &kp X         &kp C         &kp V   &kp B        &kp RIGHT_ARROW  &kp N      &kp M      &kp COMMA  &kp DOT          &kp FSLH    &kp ENTER
&kp C_MUTE  &kp LEFT_GUI  &kp LEFT_ALT  &kp GRAVE     &to 1   &kp SPACE    &kp ENTER        &kp SPACE  &kp ENTER  &to 2      &kp RIGHT_SHIFT  &kp DELETE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "QWERTY";
        };

        layer_1 {
            bindings = <
&kp GRAVE   &kp F1           &kp F2             &kp F3           &kp F4           &kp F5             &mmv MOVE_UP     &kp F6       &kp F7           &kp F8           &kp F9          &kp F10           &trans
&kp TAB     &kp LEFT_BRACKET &kp RIGHT_BRACKET  &kp MINUS        &kp EQUAL        &kp KP_MULTIPLY    &mmv MOVE_DOWN   &kp HOME     &kp END          &kp PSCRN        &trans          &trans            &trans
&kp LSHFT   &kp LPAR         &kp RPAR           &kp HASH         &kp EXCLAMATION  &kp SLASH          &mmv MOVE_LEFT   &kp PAGE_UP  &kp PAGE_DOWN    &kp UP           &trans          &trans            &trans
&kp LCTRL   &trans           &trans             &trans           &trans           &trans             &mmv MOVE_RIGHT  &trans       &kp LEFT         &kp DOWN         &kp RIGHT       &trans            &trans
&kp C_MUTE  &kp LEFT_GUI     &kp LEFT_ALT       &kp GRAVE        &to 0            &trans             &mkp LCLK        &kp SPACE    &kp ENTER        &to 2            &kp RIGHT_SHIFT &kp DELETE
            >;

            display-name = "SYM & NAV";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_2 {
            bindings = <
&kp GRAVE   &kp F1           &kp F2             &kp F3           &kp F4           &kp F5             &mmv MOVE_UP     &kp F6       &kp F7      &kp F8      &kp F9     &kp F10           &trans
&kp TAB     &kp LEFT_BRACKET &kp RIGHT_BRACKET  &kp MINUS        &kp EQUAL        &kp KP_MULTIPLY    &mmv MOVE_DOWN   &kp SLASH    &kp KP_N7   &kp KP_N8   &kp KP_N9  &kp MINUS         &kp RIGHT_BRACKET
&kp LSHFT   &kp LPAR         &kp RPAR           &kp HASH         &kp EXCLAMATION  &kp SLASH          &mmv MOVE_LEFT   &kp ASTERISK &kp KP_N4   &kp KP_N5   &kp KP_N6  &kp EQUAL         &kp LEFT_BRACKET
&kp LCTRL   &trans           &trans             &trans           &trans           &trans             &mmv MOVE_RIGHT  &trans       &kp KP_N1   &kp KP_N2   &kp KP_N3  &trans            &trans 
&kp C_MUTE  &kp LEFT_GUI     &kp LEFT_ALT       &kp GRAVE        &to 0            &trans             &mkp LCLK        &kp SPACE    &kp ENTER   &to 3       &kp KP_N0  &kp DELETE
            >;

            display-name = "SYM & NUM";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            bindings = <
&kp TILDE   &bt BT_SEL 0     &bt BT_SEL 1       &bt BT_SEL 2     &bt BT_SEL 3    &bt BT_SEL 4        &mmv MOVE_UP     &kp F6      &kp F7      &kp F8      &kp F9            &kp F10      &trans
&trans      &bt BT_CLR       &bt BT_CLR_ALL     &trans           &trans          &trans              &mmv MOVE_DOWN   &trans      &trans      &trans      &trans            &trans       &trans
&trans      &out OUT_USB     &out OUT_BLE       &trans           &trans          &trans              &mmv MOVE_LEFT   &trans      &trans      &trans      &trans            &trans       &trans
&trans      &rgb_ug RGB_OFF  &rgb_ug RGB_ON     &rgb_ug RGB_EFF  &rgb_ug RGB_EFR &rgb_ug RGB_SPI     &mmv MOVE_RIGHT  &trans      &trans      &sys_reset  &soft_off         &bootloader  &trans
&kp C_MUTE  &kp LEFT_GUI     &kp LEFT_ALT       &kp GRAVE        &to 0           &trans              &mkp LCLK        &kp SPACE   &kp ENTER   &to 0       &kp RIGHT_SHIFT   &kp DELETE
            >;

            sensor-bindings = <&inc_dec_kp RGB_BRI RGB_BRD>;
            display-name = "BT & RGB";
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
